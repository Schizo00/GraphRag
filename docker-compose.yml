services:

  backend:
    build:
      dockerfile: dockerfile
      context: /backend
    ports:
      - "8000:8000"
    environment:
      - NEO4J_URI=neo4j://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=password
      - NEO4J_CONNECTION_POOL_SIZE=50
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    depends_on:
      neo4j:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s

  frontend:
    build:
      dockerfile: dockerfile
      context: /frontend
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy

 
  neo4j:
    image: 'neo4j:latest'
    ports:
      - 7888:7474
      - 7999:7687
    restart: unless-stopped
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4JLABS_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
      - NEO4J_dbms_jvm_additional="--add-modules jdk.incubator.vector"
    healthcheck:
      test: perl -MIO::Socket::INET -e 'exit(! defined( IO::Socket::INET->new("localhost:7687")))'
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s


